name: Swift # Will also be the name of the build badge

on:
  push:
    branches: [ master ]

jobs:
  create_code_coverage_badge:
    runs-on: macos-latest
    steps:

    - uses: actions/checkout@v2

    - name: Build
      run: swift build -v

    - name: Run tests
      run: swift test --enable-code-coverage

    - name: Code Coverage
      uses: maxep/spm-lcov-action@0.3.1
      with:
        output-file: coverage.json
        file-format: text

    - name: Extract Coverage Percentage
      id: coverage_step
      # https://docs.github.com/en/free-pro-team@latest/actions/reference/workflow-commands-for-github-actions#setting-an-output-parameter
      run: echo "::set-output name=coverage::$(cat coverage.json | jq -r ".data[0].totals.lines.percent" | head -c 5)"

    - name: Create Status Badge
      uses: emibcn/badge-action@v1
      with:
        label: 'Code Coverage'
        status: ${{ steps.coverage_step.outputs.coverage }}%
        color: 'orange' #'green'
        path: '.github/badges/coverage.svg'

    - run: git status
    - run: pwd
    - run: ls -lah

    - name: Commit files
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add coverage.svg
        git commit -m "CI: Updated code coverage badge"

    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ github.ref }}

  generate_swift_docs:
    runs-on: ubuntu-20.04
    needs: create_code_coverage_badge # The jobs have to run sequentially since they both push
    steps:

      # Letting the push from previous step fully propagate
      - name: Let changes propagate
        run: sleep 5

      - uses: actions/checkout@v2

      - name: Generate Documentation
        uses: SwiftDocOrg/swift-doc@master
        with:
          # Generates HTML documentation, and writes to the `docs` dir
          module-name: Disruptive
          format: html
          output: docs
          base-url: https://vegather.github.io/Disruptive/

      - run: git status
      - run: pwd
      - run: ls -lah

      # Pull down any changes from the previous step that might not yet have propagated when we checked out
      - name: Pull latest changes
        run: git pull

      - run: git status
      - run: pwd
      - run: ls -lah

      - name: Commit files
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add docs/
          git commit -m "CI: Updated Swift documentation"

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
